[uwsgi]
chdir = /path/to/bchat-push-notification-server
socket = pns.wsgi
chmod-socket = 666
plugins = python3,logfile
manage-script-name = true
logger = file:logfile=/path/to/bchat-push-notification-server/pns.log,maxsize=100000000,backupname=/path/to/bchat-push-notification-server/pns.log.old

# Because requests block while waiting for the hivemind to process the request we run with lots of
# thread workers available that can deal with lots of concurrent pending connections in case the
# hivemind gets momentarily busy handling requests and/or notifications.  (This would be a good use
# for async handling, but uwsgi doesn't currently support that).
enable-threads = true
threads = 16

# This is the main handler for front-end "app" requests:
mount = /=pns.web:app

# Alongside the web front-end interface we *can* run the backend workers (which do most of the work)
# as "mules", so that all the processes are managed by uwsgi.
#
# Alternatively, you can run hivemind as notifiers as systemd services, which is a little more
# flexible.
#
# Choose an approach: if using systemd then install the systemd/* files and activate the services
# via systemd, keeping the following mules commented out.
# If using mules and putting everything under uwsgi then *don't* install the systemd files and
# uncomment the hivemind and any desired notifiers here.

### Hivemind
# This is the main "hivemind" mule that is the central business component of the PN server.
#mule = pns.hivemind:run

### Notifiers
# Apple APNS push notifier; required if you want to support APNS notifications:
#mule = pns.notifiers.apns:run
# Google firebase push notification server for Google API android device notifications:
#mule = pns.notifiers.firebase:run

# Dummy notifier, normally disabled.  This notifier does nothing aside from logging would-be
# notifications.  Leave disabled when not developing/debugging.
#mule = pns.notifiers.dummy:run
